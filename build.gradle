plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'war'
	id 'jacoco'
}

group = 'com.arquitectura.proyecto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


jacoco {
	toolVersion = "0.8.8"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/configuration/**",
					"**/entitys/*",
					"**/repository/*",
					"com/arquitectura/proyecto/ALSG/services/ICustomerService",
					"com/arquitectura/proyecto/ALSG/services/IEmployeeService",
					"com/arquitectura/proyecto/ALSG/services/ISupplierService",
					"com/arquitectura/proyecto/ALSG/ServletInitializer",
					"com/arquitectura/proyecto/ALSG/AlsgApplication,"
			])
		}))
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

tasks.named('test') {
	useJUnitPlatform()
}
